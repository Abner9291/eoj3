{% extends 'polygon/problem/base.jinja2' %}

{% macro option_dropdown() %}
  <div class="ui icon right pointing dropdown button">
    <i class="options icon"></i>
    <div class="menu">
      <div class="item">
        <i class="cut icon"></i> Split input
      </div>
      <div class="divider"></div>
      <a class="item" :href="'{{ url('polygon:session_download_case_input', session.id) }}?fingerprint=' + element.fingerprint" target="_blank">
        <i class="cloud download icon"></i> Download input
      </a>
      <a class="item" :href="'{{ url('polygon:session_download_case_output', session.id) }}?fingerprint=' + element.fingerprint" target="_blank">
        <i class="cloud download icon"></i> Download output
      </a>
      <div class="item" @click="showDeleteDialog" :data-fingerprint="element.fingerprint"
           data-action="{{ url('polygon:session_delete_case', session.id) }}">
        <i class="trash icon"></i> Delete
      </div>
    </div>
  </div>
{% endmacro %}

{% macro reform_property_list() %}
  <ul class="list">
    <li>each line finishes with EOLN;</li>
    <li>doesn't contain characters with codes less than 32;</li>
    <li>doesn't contain leading or trailing spaces;</li>
    <li>doesn't contain two or more consecutive spaces;</li>
    <li>doesn't contain leading or trailing empty lines;</li>
    <li>file is not empty.</li>
    <li>file encoding must be utf-8.</li>
  </ul>
{% endmacro %}

{% macro span_pretest_and_sample() %}
  <span class="click-able icon label" @click="postLink" :data-fingerprint="element.fingerprint"
        data-action="{{ url('polygon:session_toggle_sample_case', session.id) }}"
        data-tooltip="Sample test" data-inverted="" style="margin-left:1em">
    <i class="tv icon blue" v-if="element.sample"></i>
    <i class="tv icon grey" v-else></i>
  </span>
  <span class="click-able icon label" @click="postLink" :data-fingerprint="element.fingerprint"
        data-action="{{ url('polygon:session_toggle_pretest_case', session.id) }}"
        data-tooltip="Pretest" data-inverted="">
    <i class="hide icon blue" v-if="element.pretest"></i>
    <i class="hide icon grey" v-else></i>
  </span>
{% endmacro %}

{% macro span_icon_status() %}
  Modified [[ element.modified_time ]],
  [[ Math.round(element.size / 1024) ]] KB.
  Worth <a @click="showDialogWithOneForm" data-target="#case-point-modal"
        :data-fingerprint="element.fingerprint" :data-point="element.point">[[ element.point ]] points</a>.<br>

  <span class="click-able icon label" @click="showDialogWithOneForm" data-target="#case-reform-modal"
        :data-fingerprint="element.fingerprint" data-action="{{ url('polygon:session_reform_case', session.id) }}">
    <i class="check circle icon pink" v-if="element.well_form"></i>
    <i class="help icon pink" v-else></i>
    Well formed</span>

  <span class="click-able icon label" @click="showDialogWithOneForm" data-target="#select-program-modal"
        :data-fingerprint="element.fingerprint" :data-program="appData.validator"
        data-action="{{ url('polygon:session_validate_case', session.id) }}">
    <i class="check circle icon violet" v-if="element.validated == 1"></i>
    <i class="remove icon violet" v-else-if="element.validated == -1"></i>
    <i class="help icon violet" v-else></i>
    Validated</span>

  <span class="click-able icon label" @click="showDialogWithOneForm" data-target="#select-program-modal"
        :data-fingerprint="element.fingerprint" :data-program="appData.model"
        data-action="{{ url('polygon:session_run_case_with_model', session.id) }}">
    <i class="check circle icon teal" v-if="element.model == 1"></i>
    <i class="remove icon teal" v-else-if="element.model == -1"></i>
    <i class="help icon teal" v-else></i>
    Model output</span>

  <span class="click-able icon label" @click="showDialogWithOneForm" data-target="#check-output-modal"
        :data-fingerprint="element.fingerprint" :data-program="appData.model" :data-checker="appData.checker"
        data-action="{{ url('polygon:session_check_case_output', session.id) }}">
    <i class="check circle icon yellow" v-if="element.checked == 1"></i>
    <i class="remove icon yellow" v-else-if="element.checked == -1"></i>
    <i class="help icon yellow" v-else></i>
  Checked</span>
{% endmacro %}

{% block problem_content %}

  <div class="ui segments">

    <div class="ui right aligned segment">
      <div class="ui top attached progress" id="case-upload-progress" style="display:none">
        <div class="bar"></div>
      </div>
      <div class="ui dropdown onhover">
        <button class="ui icon button positive compact text"><i class="plus icon"></i> Add</button>
        <div class="menu">
          <div class="item" v-on:click="showDialogWithOneForm" data-target="#case-add" data-block="true">
            <i class="write icon"></i> Manually</div>
          <div class="item" v-on:click="showDialogWithOneForm" data-target="#case-file-upload">
            <i class="upload icon"></i> Upload</div>
          <div class="item" v-on:click="showDialogWithOneForm" data-target="#generate-input-modal" data-block="true">
            <i class="keyboard icon"></i> Generate</div>
          <div class="item" v-on:click="showDialogWithOneForm" data-target="#stress-test-modal" data-block="true">
            <i class="hourglass start icon"></i> Stress</div>
        </div>
      </div>
    </div>

    <div class="ui segment">
      <div class="ui header">Current</div>
      <draggable class="ui middle aligned list" v-model="caseList" :options="{group:'caseList'}">
        <div class="item" v-for="(element, index) in caseList" :key="element.fingerprint">
          <div class="right floated content">
            {{ option_dropdown() }}
          </div>
          <i class="neuter icon"></i>
          <div class="content">
            <div class="click-able header">
              <span data-get-action="{{ url('polygon:session_preview_case', session.id) }}"
                    @click="previewCase" :data-fingerprint="element.fingerprint">
                Case [[ index + 1 ]]
              </span>
              {{ span_pretest_and_sample() }}
            </div>
            <div class="description">{{ span_icon_status() }}</div>
          </div>
        </div>
        <div class="ui message" v-if="caseList.length == 0">Empty yet. Drag cases here.</div>
      </draggable>
    </div>
    <div class="ui segment">
      <div class="ui header">Unused Cases</div>
      <draggable class="ui middle aligned list" v-model="unusedCaseList" :options="{group:'caseList'}">
        <div class="item" v-for="element in unusedCaseList" :key="element.fingerprint">
          <div class="right floated content">
            {{ option_dropdown() }}
          </div>
          <i class="genderless icon"></i>
          <div class="content">
            <div class="click-able header">
              <span data-get-action="{{ url('polygon:session_preview_case', session.id) }}"
                    @click="previewCase" :data-fingerprint="element.fingerprint">
                Case NaN
              </span>
              {{ span_pretest_and_sample() }}
            </div>
            <div class="description">{{ span_icon_status() }}</div>
          </div>
        </div>
        <div class="ui message" v-if="unusedCaseList.length == 0">Empty yet. Drag cases here.</div>
      </draggable>
    </div>

    <!-- Toolbox -->

    <div class="ui segment">

      <div class="ui icon bottom left pointing dropdown button">
        <i class="travel icon"></i>
        <div class="menu">
          <div class="item" @click="showDialogWithOneForm" data-target="#case-reform-modal"
               data-action="{{ url('polygon:session_reform_all_case', session.id) }}">
            Reform all cases
          </div>
          <div class="item" @click="showDialogWithOneForm" data-target="#select-program-modal"
               :data-program="appData.validator" data-action="{{ url('polygon:session_validate_all_case', session.id) }}">
            Validate all cases
          </div>
          <div class="item" @click="showDialogWithOneForm" data-target="#select-program-modal"
               :data-program="appData.model" data-action="{{ url('polygon:session_run_all_case_with_model', session.id) }}">
            Produce all outputs
          </div>
          <div class="item" @click="showDialogWithOneForm" data-target="#check-output-modal"
               :data-program="appData.model" :data-checker="appData.checker"
               data-action="{{ url('polygon:session_check_all_case_output', session.id) }}">
            Check all cases
          </div>
        </div>
      </div>

      <div class="ui right floated buttons">
        <a class="ui button" @click="updateCaseList">Reset</a>
        <div class="or"></div>
        <a class="ui teal button" @click="saveCaseOrders"
           data-action="{{ url('polygon:session_update_orders', session.id) }}">
          Save orders</a>
      </div>

    </div>
  </div>

  {% call modal(title="Add a new case", id="case-add", size="small") %}
    <form class="ui form" action="{{ url('polygon:session_create_case_manually', session.id) }}" method="POST"
          data-progress-bar="#files-upload-progress">
      {% csrf_token %}
      <div class="two fields">
        <div class="field">
          <label for="input">Input</label>
          <textarea name="input"></textarea>
        </div>
        <div class="field">
          <label for="output">Output</label>
          <textarea name="output"></textarea>
        </div>
      </div>
      <div class="ui checkbox field">
        <input type="checkbox" name="wellForm" checked>
        <label>Make my tests well-formed</label>
      </div>
    </form>
  {% endcall %}

  {% call modal(title="Upload a new file", id="case-file-upload") %}
    <form class="ui form" action="{{ url('polygon:session_upload_case', session.id) }}" method="POST"
          data-progress-bar="#case-upload-progress">
      {% csrf_token %}
      <p>Upload an input file or tests wrapped in a zip archive.</p>
      <div class="field">
        <label for="files">Choose a file</label>
        <div class="ui fluid file input action">
          <input type="text" readonly>
          <input type="file" name="file" autocomplete="off">
          <div class="ui button">Select...</div>
        </div>
      </div>
    </form>
  {% endcall %}

  {% call modal(title="Reform a case", id="case-reform-modal") %}
    <p>Case-reform will do the following. To make sure:</p>
    {{ reform_property_list() }}
    <form class="ui form" action="" method="POST">
      {% csrf_token %}
      <div class="ui checkbox field">
        <input type="checkbox" name="onlyInput">
        <label>Reform input only</label>
      </div>
    </form>
  {% endcall %}

  {% call modal(title="Readjust case point", id="case-point-modal") %}
    <form class="ui form" action="{{ url('polygon:session_update_case_point', session.id) }}" method="POST">
      {% csrf_token %}
      <div class="ui field">
        <label>Worth points</label>
        <input type="number" name="point">
      </div>
    </form>
  {% endcall %}

  <div class="ui longer small modal" id="case-preview-modal">
    <div class="header">Preview Case</div>
    <div class="scrolling content">
      <div class="ui header">Input</div>
      <pre class="ui segment"><code>[[ previewCaseInput ]]</code></pre>
      <div class="ui header">Output</div>
      <pre class="ui segment"><code>[[ previewCaseOutput ]]</code></pre>
    </div>
  </div>

  {% call modal(title="Select a program", id="select-program-modal") %}
    <form class="ui form" action="" method="POST">
      {% csrf_token %}
      <div class="field">
        <div class="ui selection dropdown fluid">
          <label>Use</label>
          <input type="hidden" name="program" data-important="true">
          <i class="dropdown icon"></i>
          <div class="text"></div>
          <div class="menu">
            <div class="item" v-for="program in appData.program_file_list" :data-value="program.filename">[[ program.filename ]] ([[ program.type ]])</div>
          </div>
        </div>
      </div>
    </form>
  {% endcall %}

  {% call modal(title="Check output", id="check-output-modal") %}
    <form class="ui form" action="" method="POST">
      {% csrf_token %}
      <div class="field">
        <div class="ui selection dropdown fluid">
          <label>Run with</label>
          <input type="hidden" name="program" data-important="true">
          <i class="dropdown icon"></i>
          <div class="text"></div>
          <div class="menu">
            <div class="item" v-for="program in appData.program_file_list" :data-value="program.filename">[[ program.filename ]] ([[ program.type ]])</div>
          </div>
        </div>
      </div>
      <div class="field">
        <div class="ui selection dropdown fluid">
          <label>Check with</label>
          <input type="hidden" name="checker" data-important="true">
          <i class="dropdown icon"></i>
          <div class="text"></div>
          <div class="menu">
            <div class="item" v-for="program in appData.program_file_list" :data-value="program.filename">[[ program.filename ]] ([[ program.type ]])</div>
          </div>
        </div>
      </div>
    </form>
  {% endcall %}

  {% call modal(title='Generate input', id='generate-input-modal') %}
    <form class="ui form" action="{{ url('polygon:session_generate_input', session.id) }}" method="POST">
      {% csrf_token %}
      <div class="field">
        <div class="ui selection dropdown fluid">
          <label>Generate with</label>
          <input type="hidden" name="generator" data-important="true">
          <i class="dropdown icon"></i>
          <div class="text"></div>
          <div class="menu">
            <div class="item" v-for="program in appData.program_file_list" :data-value="program.filename">[[ program.filename ]] ([[ program.type ]])</div>
          </div>
        </div>
      </div>
      <div class="field">
        <label for="input">This will generate [[ generateParamLength ]] cases.</label>
        <textarea name="param" v-model="generateParam"></textarea>
      </div>
    </form>
  {% endcall %}

  {% call modal(title='Stress test', id='stress-test-modal') %}
    <form class="ui form" action="{{ url('polygon:session_create_case_from_stress', session.id) }}" method="POST">
      {% csrf_token %}
      <div class="field">
        <label>Suspect:</label>
        <div class="ui selection dropdown fluid">
          <input type="hidden" name="submission" data-important="true">
          <i class="dropdown icon"></i>
          <div class="text"></div>
          <div class="menu">
            <div class="item" v-for="program in appData.program_file_list" :data-value="program.filename">[[ program.filename ]] ([[ program.type ]])</div>
          </div>
        </div>
      </div>
      <div class="field">
        <label>Generator:</label>
        <div class="ui selection dropdown fluid">
          <input type="hidden" name="generator" data-important="true">
          <i class="dropdown icon"></i>
          <div class="text"></div>
          <div class="menu">
            <div class="item" v-for="program in appData.program_file_list" :data-value="program.filename">[[ program.filename ]] ([[ program.type ]])</div>
          </div>
        </div>
      </div>
      <div class="field">
        <label for="input">This will generate [[ generateParamLength ]] cases.</label>
        <textarea name="param" v-model="generateParam"></textarea>
      </div>
      <div class="field">
        <label>Time:</label>
        <div class="ui selection dropdown fluid">
          <input type="hidden" name="time" data-important="true">
          <i class="dropdown icon"></i>
          <div class="text"></div>
          <div class="menu">
            <div class="item" data-value="1">1 min</div>
            <div class="item" data-value="2">2 mins</div>
            <div class="item" data-value="3">3 mins</div>
            <div class="item" data-value="4">4 mins</div>
            <div class="item" data-value="5">5 mins</div>
          </div>
        </div>
      </div>
    </form>
  {% endcall %}

{% endblock %}
